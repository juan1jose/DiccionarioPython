# -*- coding: utf-8 -*-
"""DiccionarioPython.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17sqN7cMLt19bgv3jtzuqE_2FWv3wrWFR
"""

def edadPerf(edadUsu):

  def verificacionEdad(edadUsu):
    print(f"La edad que ingresas es  : {edadUsu}")
    if edadUsu>=18:
      print("OK, Eres mayor de edad ahora debes trabajar y ser un adulto emocionalmente estable")
    else:
      print(f"Eres menor de edad y te faltan {18 - edadUsu}")


  def verificarGen(edadUsu):
    anioDeNacimineto = 2024 - edadUsu

    if 1928 > anioDeNacimineto <= 1945:
      print("Perteneces a la generacion Silent")
    elif 1945 > anioDeNacimineto <=1964:
      print("Perteneces a la generacion Baby Boomer")
    elif 1965 > anioDeNacimineto <= 1981:
      print("Perteneces a la generacion X")
    elif 1982 > anioDeNacimineto <= 1996:
      print("Perteneces a la generacion Y")
    elif 1997 > anioDeNacimineto <= 2012:
      print("Perteneces a la generacion Z")
    elif 2013 > anioDeNacimineto <= 2024:
      print("Perteneces a la generacion Millenians")
    else:
      print("No perteneces a ninguna generacion")


  def redondearEdad(edadUsu):
    verifEdad= edadUsu % 10

    if verifEdad != 0:
      print(f" Yu edad no es exacta {edadUsu}")
    else:
      print(f"Tu edad no es exacta {edadUsu}")

  def mostrarInfo():
    print(f"Esta es tu edad {edadUsu}")
    verificacionEdad(edadUsu)
    verificarGen(edadUsu)
    redondearEdad(edadUsu)
  return mostrarInfo

parametro = int(input("Ingrese su edad  :  "))
info = edadPerf(parametro)
info()

"""punto 5"""

def adminGuest():
  print("Bienvenido a el programa que te ayudara a gestionar los invitados de una lista")
  ListGuest=[]

  def addGuest():
    nomb1= input("Ingrese el invitado que desea")
    print(f"El invitado que agrego es  {nomb1}")
    ListGuest.append(nomb1)
    print(*ListGuest)

  def deleteGuest():
    guestDel = input("Ingrese el Invitado que desea eliminar")
    if guestDel in ListGuest:
      ListGuest.remove(guestDel)
      print(f"El invitado {guestDel} fue eliminado con exito")
    else:
      print(f"El usuario {guestDel} no se encuentra en la lista")
      print(*ListGuest)

  def guestCheck():
    seeGuest = input("Ingrese el invitado que desea verificar")
    if seeGuest in ListGuest:
      numseeGuest=ListGuest.index(seeGuest)
      print(f"el invitado {seeGuest} se encuentra en la posicion {numseeGuest} de la lista actual", *ListGuest)
    else:
      print(f"el usuario  {seeGuest} no se encuentra en la lista")

  def editGuest():
    print(*ListGuest)
    nameEditGuest = input("Ingrese el nombre que desea editar por favor : ")
    if nameEditGuest in ListGuest:
      indexEditGuest = ListGuest.index(nameEditGuest)
      newGuest = input("Ingrese el nuevo nombre")
      ListGuest[indexEditGuest] = newGuest
      print(*ListGuest)
    else:
      print(f"el invitado {nameEditGuest} no se encuentra en la lista :(")

  while True:
    print("Use las siguientes opciones para usar el programa  \n 1. Agregar invitado \n 2. Eliminar invitado \n 3. Verificar invitado \n 4. Editar invitado \n 5. Salir")
    opcion = input("Ingrese la opcion que desea realizar")
    if opcion == "1":
      addGuest()
    elif opcion == "2":
      deleteGuest()
    elif opcion == "3":
      guestCheck()
    elif opcion == "4":
      editGuest()
    elif opcion == "5":
      print("Gracias por usar el programa")
      break
    else:
      print("Opcion invalida")

adminGuest()

"""Punto 4
 Crear un programa en Python para gestionar una lista de contactos utilizando un
diccionario.
Descripción del Ejercicio:
Vas a desarrollar una aplicación que permita al usuario gestionar una lista de contactos. El
programa debe permitir las siguientes acciones:
1. Agregar Contacto: Permite al usuario ingresar el nombre y el teléfono de un
contacto y lo guarda en un diccionario.
2. Buscar Contacto: Permite al usuario buscar el teléfono de un contacto por su
nombre.
3. Mostrar Contactos: Muestra todos los contactos guardados en el diccionario.
4. Editar Contacto: Permite al usuario actualizar el teléfono de un contacto existente
"""

def adminContact():
  print("Bienvenido a tu programa de administración de contactos")
  adminContact={}

  def addContact():
    addName= input(print("Ingrese el nombre de contacto")).lower()
    addPhone = input(print("Ingrese el Numero de telefono")).lower()
    addCity= input(print("Ingrese la ciudad de residencia")).lower()
    adminContact[addName] = {}
    adminContact[addName]["Nombre"]=addName
    adminContact[addName]["Telefono"]=addPhone
    adminContact[addName]["Ciudad"]=addCity
    contacts = list(adminContact.keys())
    print(f"El contacto {addName} fue Guardado con exito")
    print(*contacts)

  def searchContact():
    findName= input("Ingrese el nombre que desea encontrar").lower()
    keys = list(adminContact.keys())
    value = list(adminContact.values())

    if findName in adminContact:
      print(f"el nombre {findName}  esta en la lista", adminContact[findName])
    else:
      print(f"El Nombre {findName} no esta en la lista")


  def editContact():
    nameEditContact = input("Ingrese el Nombre del contacto que desea editar").lower()
    if nameEditContact in adminContact:

      while True:
        opcionEdit = input("Que desea editar \n 1. Nombre \n 2. Telefono \n 3. Ciudad \n 4. Salir  \n \n")

        if opcionEdit == "1":
          newContact = input("Ingres el nuevo contacto").lower()
          adminContact[nameEditContact]["Nombre"]=newContact
        elif opcionEdit == "2":
          newPhone = input("Ingres el nuevo telefono").lower()
          adminContact[nameEditContact]["Telefono"]=newPhone
        elif opcionEdit == "3":
          newCity = input("Ingres la nueva ciudad").lower()
          adminContact[nameEditContact]["Ciudad"]=newCity
        elif opcionEdit == "4":
          print("Gracias por usar el programa")
          break
        else:
          print("opcion invalidad")
        print(*adminContact)
    else:
      print(f"El contacto {nameEditContact} no se encuentra en la lista")

  def showContact():
    printName = input("Ingrese el nombre del contacto que desea ver").lower()
    if printName in adminContact:
      print(adminContact[printName])
    else:
      print(f"El usuario {printName} no esta en la lista de contactos")

  while True:
    opcion = input("Ingrese la opcion que desea hacer \n 1. Agregar contacto \n 2. Buscar contacto \n 3. Editar contacto \n 4. Mostrar contactos \n 5. Salir \n")
    if opcion == "1":
      addContact()
    elif opcion == "2":
      searchContact()
    elif opcion == "3":
      editContact()
    elif opcion == "4":
      showContact()
    elif opcion == "5":
      print("Gracias por usar este programa")
      break
    else:
      print("Opcion Invalida")


adminContact()